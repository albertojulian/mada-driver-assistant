log : False

communications :
    ws_ip : ws://192.168.43.233  # WebSocket server address; IP given by cell phone wi-fi;
    ws_port : 8765  # port selected for web sockets
    android_wifi : AndroidAJR
    mac_connected_and_phone_app : Mac is connected to Android phone wi-fi. Start speed and voice app.
    phone_connected : Android phone is connected  # DO NOT EDIT, MUST MATCH MESSAGE FROM PHONE
    phone_connected_start_object_detector : Android phone is connected to Driver Agent events handler. Start Object Detector loop.
    phone_connected_start_video_recorder : Android phone is connected to events recorder. Start Video Recorder.
    listening_ack : Say 'exit' or 'quit' to finish session  # "Listen" was recognised, thus listen mode is ON and Driver Agent Graph starts
    object_detector_unknown_error : Object Detector or connection error; check if phone wi-fi is shared, Mac is connected to it and driver agent event handler is on
    video_recorder_unknown_error : Video Recorder or connection error; check if phone wi-fi is shared, Mac is connected to it and event recorder is on

live : False  # True => camera, False => recorded video files

camera :
    image_width : 640  # See "rs-enumerate-devices modos y resoluciones x y z.xlsx"
    image_height : 480  # See "rs-enumerate-devices modos y resoluciones x y z.xlsx"
    fps : 6  # frames per second. Some values: 6, 15, 25, 30... See "rs-enumerate-devices modos y resoluciones x y z.xlsx"
    max_distance_from_camera : 7  # maximum distance that the camera can reliably detect

# In case live is False, the following parameters & values are used
recorded_video :
    in_video_dir : ../../videos
    in_rgb_video : rgb_2.mp4   # rgb_3.mp4 rgb_2.mp4  rgb_0.mp4
    # in_rgb_video : v01_20_traffic_light_all_colors.mp4  # rgb_5.mp4
    # in_rgb_video : v01_20_yellow_traffic_light.mp4
    init_frame : 600
    sleep_time : 0    # how much time (s) a frame is displayed; debug purpose

object_detection_model :
    # yolo_model : yolov8m.pt    # v0.1
    yolo_model : yolov8m_redu_e20_best.pt
    # yolo_model : yolov8m_redu_e40_best.pt
    roboflow_model : traffic-signs-redu/3
    mada_class_names : ['bicycle', 'bus', 'car', 'construction', 'cycles crossing', 'dead end street',
                        'give way', 'go left', 'go right', 'motorcycle', 'no entry', 'no left turn', 'no overtaking',
                        'no priority', 'no right turn', 'pedestrian crossing', 'person', 'roundabout',
                        'school crossing', 'speed limit', 'stop', 'traffic light', 'truck']
    score_thresh : 0.5  # only classes with a greater score are considered
    show_track : False  # if True, image is displayed in model.track

time_between_actions: 5  # to avoid redundant actions about the same object

speed :
    speed_threshold : 5  # in km/h; minimum to check safety distance
    speed_limits : [20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]

traffic_light :
    traffic_light_threshold_ratio : 0.03    # below this ratio of "light pixels" / "total 1/3 pixels", the traffic light is considered off
    hue_ranges :  # Hue ranges (HSV/HSB) for Traffic Light colors
        red_H_lower1 : 0
        red_H_upper1 : 9
        red_H_lower2 : 170
        red_H_upper2 : 180    # H standard is circular: 0-360, and red is located in 0+-10; H in OpenCV is normalized to 0-180 => upper2 (180) == lower1 (0)
        yellow_H_lower : 8
        yellow_H_upper : 35
        green_H_lower : 40
        green_H_upper : 90

driver_agent :
    llm_type : ollama  # mlx or ollama
    mlx_llm : mlx-community/gemma-2-2b-it-8bit
    # mlx_llm : mlx-community/gemma-2-2b-it-4bit
    # ollama_llm : gemma2:2b  # first run in terminal: "ollama run gemma2:2b"; then "/exit"
    ollama_llm : llama3.2:3b  # first run in terminal: "ollama run llama3.2:3b"; then "/exit"
    tools : [check_safety_distance_from_vehicle_lg, get_current_speed_lg, get_safety_distance_lg, get_last_speed_limit_sign_lg]
